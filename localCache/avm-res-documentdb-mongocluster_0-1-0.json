{
  "module": {
    "name": "avm-res-documentdb-mongocluster",
    "display_name": "avm-res-documentdb-mongocluster",
    "terraform_registry_url": "https://registry.terraform.io/modules/Azure/avm-res-documentdb-mongocluster/azurerm/0.1.0",
    "source_code_url": "https://github.com/Azure/terraform-azurerm-avm-res-documentdb-mongocluster",
    "version": "0.1.0",
    "description": "Terraform Azure Verified Resource Module for Cosmos DB for MongoDB (vCore)",
    "resources": [
      "random_uuid.telemetry",
      "azapi_resource.mongo_cluster",
      "azapi_resource.firewall_rule",
      "azapi_resource.diagnostic_setting",
      "azurerm_private_endpoint.this_managed_dns_zone_groups",
      "modtm_telemetry.telemetry",
      "azurerm_management_lock.this",
      "azurerm_role_assignment.this",
      "azurerm_private_endpoint.this_unmanaged_dns_zone_groups",
      "azurerm_private_endpoint_application_security_group_association.this",
      "azapi_client_config.current",
      "azapi_client_config.telemetry",
      "modtm_module_source.telemetry"
    ],
    "inputs": [
      {
        "name": "administrator_login_password",
        "type": "string",
        "required": true
      },
      {
        "name": "compute_tier",
        "type": "string",
        "required": false
      },
      {
        "name": "diagnostic_settings",
        "type": "map(object({\n    name                                     = optional(string, null)\n    log_categories                           = optional(set(string), [])\n    log_groups                               = optional(set(string), [\"allLogs\"])\n    metric_categories                        = optional(set(string), [\"AllMetrics\"])\n    log_analytics_destination_type           = optional(string, \"Dedicated\")\n    workspace_resource_id                    = optional(string, null)\n    storage_account_resource_id              = optional(string, null)\n    event_hub_authorization_rule_resource_id = optional(string, null)\n    event_hub_name                           = optional(string, null)\n    marketplace_partner_resource_id          = optional(string, null)\n  }))",
        "required": false
      },
      {
        "name": "firewall_rules",
        "type": "list(object({\n    name     = string\n    start_ip = string\n    end_ip   = string\n  }))",
        "required": false
      },
      {
        "name": "managed_identities",
        "type": "object({\n    system_assigned            = optional(bool, false)\n    user_assigned_resource_ids = optional(set(string), [])\n  })",
        "required": false
      },
      {
        "name": "private_endpoints",
        "type": "map(object({\n    name = optional(string, null)\n    role_assignments = optional(map(object({\n      role_definition_id_or_name             = string\n      principal_id                           = string\n      description                            = optional(string, null)\n      skip_service_principal_aad_check       = optional(bool, false)\n      condition                              = optional(string, null)\n      condition_version                      = optional(string, null)\n      delegated_managed_identity_resource_id = optional(string, null)\n      principal_type                         = optional(string, null)\n    })), {})\n    lock = optional(object({\n      kind = string\n      name = optional(string, null)\n    }), null)\n    tags                                    = optional(map(string), null)\n    subnet_resource_id                      = string\n    private_dns_zone_group_name             = optional(string, \"default\")\n    private_dns_zone_resource_ids           = optional(set(string), [])\n    application_security_group_associations = optional(map(string), {})\n    private_service_connection_name         = optional(string, null)\n    network_interface_name                  = optional(string, null)\n    location                                = optional(string, null)\n    resource_group_name                     = optional(string, null)\n    ip_configurations = optional(map(object({\n      name               = string\n      private_ip_address = string\n    })), {})\n  }))",
        "required": false
      },
      {
        "name": "private_endpoints_manage_dns_zone_group",
        "type": "bool",
        "required": false
      },
      {
        "name": "public_network_access",
        "type": "string",
        "required": false
      },
      {
        "name": "location",
        "type": "string",
        "required": true
      },
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "customer_managed_key",
        "type": "object({\n    key_vault_resource_id = string\n    key_name              = string\n    key_version           = optional(string, null)\n    user_assigned_identity = optional(object({\n      resource_id = string\n    }), null)\n  })",
        "required": false
      },
      {
        "name": "lock",
        "type": "object({\n    kind = string\n    name = optional(string, null)\n  })",
        "required": false
      },
      {
        "name": "node_count",
        "type": "number",
        "required": false
      },
      {
        "name": "storage_size_gb",
        "type": "number",
        "required": false
      },
      {
        "name": "backup_policy_type",
        "type": "string",
        "required": false
      },
      {
        "name": "ha_mode",
        "type": "string",
        "required": false
      },
      {
        "name": "server_version",
        "type": "string",
        "required": false
      },
      {
        "name": "shard_count",
        "type": "number",
        "required": false
      },
      {
        "name": "tags",
        "type": "map(string)",
        "required": false
      },
      {
        "name": "administrator_login",
        "type": "string",
        "required": true
      },
      {
        "name": "resource_group_name",
        "type": "string",
        "required": true
      },
      {
        "name": "enable_ha",
        "type": "bool",
        "required": false
      },
      {
        "name": "enable_telemetry",
        "type": "bool",
        "required": false
      },
      {
        "name": "role_assignments",
        "type": "map(object({\n    role_definition_id_or_name             = string\n    principal_id                           = string\n    description                            = optional(string, null)\n    skip_service_principal_aad_check       = optional(bool, false)\n    condition                              = optional(string, null)\n    condition_version                      = optional(string, null)\n    delegated_managed_identity_resource_id = optional(string, null)\n    principal_type                         = optional(string, null)\n  }))",
        "required": false
      }
    ],
    "outputs": [
      {
        "name": "mongo_cluster_name",
        "description": "Name of the MongoDB vCore cluster.",
        "sensitive": false
      },
      {
        "name": "mongo_cluster_properties",
        "description": "Raw properties object returned by the AzAPI provider (may include status, sizing, endpoints). Subject to change with API versions.",
        "sensitive": false
      },
      {
        "name": "private_endpoints",
        "description": "  A map of the private endpoints created.\n",
        "sensitive": false
      },
      {
        "name": "resource_id",
        "description": "The resource ID of the MongoDB vCore cluster (required by AVM).",
        "sensitive": false
      },
      {
        "name": "mongo_cluster_connection_string",
        "description": "Primary Mongo connection string if exposed (preview shape). Null if not available yet.",
        "sensitive": false
      },
      {
        "name": "mongo_cluster_connection_strings",
        "description": "Collection of connection strings if service returns multiple. Null if not available.",
        "sensitive": false
      },
      {
        "name": "mongo_cluster_id",
        "description": "Resource ID of the MongoDB vCore cluster.",
        "sensitive": false
      },
      {
        "name": "mongo_cluster_location",
        "description": "Location of the MongoDB vCore cluster.",
        "sensitive": false
      }
    ]
  }
}