{
  "module": {
    "name": "avm-res-hybridcontainerservice-provisionedclusterinstance",
    "display_name": "Azure/avm-res-hybridcontainerservice-provisionedclusterinstance",
    "version": "2.0.2",
    "description": "",
    "terraform_registry_url": "https://registry.terraform.io/modules/Azure/avm-res-hybridcontainerservice-provisionedclusterinstance/azurerm",
    "source_code_url": "https://github.com/Azure/terraform-azurerm-avm-res-hybridcontainerservice-provisionedclusterinstance",
    "requirements": [
      "azapi ~> 2.0",
      "azurerm ~> 4.0",
      "modtm ~> 0.3",
      "random ~> 3.5",
      "tls >= 3.1"
    ],
    "resources": [
      "terraform_data",
      "random_uuid",
      "azurerm_management_lock",
      "azapi_resource",
      "azurerm_key_vault_secret",
      "azurerm_key_vault_secret",
      "terraform_data",
      "modtm_telemetry",
      "azurerm_role_assignment",
      "azapi_resource",
      "azapi_resource",
      "tls_private_key"
    ],
    "inputs": [
      {
        "name": "control_plane_ip",
        "type": "string",
        "required": false
      },
      {
        "name": "enable_azure_rbac",
        "type": "bool",
        "required": false
      },
      {
        "name": "enable_telemetry",
        "type": "bool",
        "required": false
      },
      {
        "name": "lock",
        "type": "object({\n    kind = string\n    name = optional(string, null)\n  })",
        "required": false
      },
      {
        "name": "managed_identities",
        "type": "object({\n    system_assigned            = optional(bool, false)\n    user_assigned_resource_ids = optional(set(string), [])\n  })",
        "required": false
      },
      {
        "name": "ssh_public_key_secret_name",
        "type": "string",
        "required": false
      },
      {
        "name": "control_plane_vm_size",
        "type": "string",
        "required": false
      },
      {
        "name": "logical_network_id",
        "type": "string",
        "required": true
      },
      {
        "name": "control_plane_count",
        "type": "number",
        "required": false
      },
      {
        "name": "nfs_csi_driver_enabled",
        "type": "bool",
        "required": false
      },
      {
        "name": "tenant_id",
        "type": "string",
        "required": false
      },
      {
        "name": "custom_location_id",
        "type": "string",
        "required": true
      },
      {
        "name": "location",
        "type": "string",
        "required": true
      },
      {
        "name": "customer_managed_key",
        "type": "object({\n    key_vault_resource_id = string\n    key_name              = string\n    key_version           = optional(string, null)\n    user_assigned_identity = optional(object({\n      resource_id = string\n    }), null)\n  })",
        "required": false
      },
      {
        "name": "enable_oidc_issuer",
        "type": "bool",
        "required": false
      },
      {
        "name": "pod_cidr",
        "type": "string",
        "required": false
      },
      {
        "name": "ssh_private_key_pem_secret_name",
        "type": "string",
        "required": false
      },
      {
        "name": "azure_hybrid_benefit",
        "type": "string",
        "required": false
      },
      {
        "name": "enable_workload_identity",
        "type": "bool",
        "required": false
      },
      {
        "name": "kubernetes_version",
        "type": "string",
        "required": false
      },
      {
        "name": "role_assignments",
        "type": "map(object({\n    role_definition_id_or_name             = string\n    principal_id                           = string\n    description                            = optional(string, null)\n    skip_service_principal_aad_check       = optional(bool, false)\n    condition                              = optional(string, null)\n    condition_version                      = optional(string, null)\n    delegated_managed_identity_resource_id = optional(string, null)\n    principal_type                         = optional(string, null)\n  }))",
        "required": false
      },
      {
        "name": "tags",
        "type": "map(string)",
        "required": false
      },
      {
        "name": "resource_group_id",
        "type": "string",
        "required": true
      },
      {
        "name": "additional_nodepools",
        "type": "list(object({\n    name              = string\n    count             = number\n    enableAutoScaling = optional(bool)\n    nodeTaints        = optional(list(string))\n    nodeLabels        = optional(map(string))\n    maxPods           = optional(number)\n    osSKU             = optional(string, \"CBLMariner\")\n    osType            = optional(string, \"Linux\")\n    vmSize            = optional(string)\n    original          = optional(bool, false)\n  }))",
        "required": false
      },
      {
        "name": "is_exported",
        "type": "bool",
        "required": false
      },
      {
        "name": "smb_csi_driver_enabled",
        "type": "bool",
        "required": false
      },
      {
        "name": "ssh_key_vault_id",
        "type": "string",
        "required": false
      },
      {
        "name": "ssh_public_key",
        "type": "string",
        "required": false
      },
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "rbac_admin_group_object_ids",
        "type": "list(string)",
        "required": false
      },
      {
        "name": "agent_pool_profiles",
        "type": "list(object({\n    count             = number\n    enableAutoScaling = optional(bool)\n    nodeTaints        = optional(list(string))\n    nodeLabels        = optional(map(string))\n    maxPods           = optional(number)\n    name              = optional(string)\n    osSKU             = optional(string, \"CBLMariner\")\n    osType            = optional(string, \"Linux\")\n    vmSize            = optional(string, \"Standard_A4_v2\")\n  }))",
        "required": true
      }
    ],
    "outputs": [
      {
        "name": "rsa_private_key",
        "description": "The RSA private key",
        "sensitive": false
      },
      {
        "name": "aks_cluster",
        "description": "AKS Arc Cluster instance",
        "sensitive": false
      },
      {
        "name": "resource_id",
        "description": "AKS Arc Provisioned Cluster instance",
        "sensitive": false
      }
    ]
  }
}